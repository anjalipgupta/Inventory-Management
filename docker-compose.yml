version: '3.8'

services:
  backend:
    build:
      context: ./Inventory-Management-backend
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./Inventory-Management-backend:/var/www
    ports:
      - "8000:8000"
    depends_on:
      - mysql
      - redis
    networks:
      - app-network

  frontend:
    build:
      context: ./inventory-management-frontend
      dockerfile: Dockerfile
    container_name: react-app
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - ./inventory-management-frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: inventory_management
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
